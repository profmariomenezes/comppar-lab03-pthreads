#include <pthread.h>   
#include <stdio.h>
#include <stdlib.h>         

void * deposito(int *id);
void * saque(int *id);

int i = 0, j = 0;

double saldo = 1000;

pthread_mutex_t mutex;

int main()
{
  
  int i;
  pthread_mutex_init(&mutex,NULL);
  pthread_t t1, t2;
  pthread_create(&t1, NULL, (void *)deposito, NULL);
  pthread_create(&t2, NULL, (void *)saque, NULL);
  pthread_join(t1, NULL);
  pthread_join(t2, NULL);
  pthread_mutex_destroy(&mutex);

  
  printf("Saldo: %2.2f",saldo);
  
}

void * deposito(int *id)
{
  double deposit;

  while(j <10)
    {
      pthread_mutex_lock(&mutex);
      deposit = (double)(5);

      saldo += deposit;
      printf("Depositado: %2.2f\n", deposit);
      fflush(stdout);
      j ++;
      pthread_mutex_unlock(&mutex);
    }
};

void * saque(int *id)
{
  double debt;

  while (i < 10)
    {
      pthread_mutex_lock(&mutex);
      debt = (double)(2);

      
      if (saldo - debt < 50)
	printf("Saldo insuficiente\n");
      else
        
	{
    
	  saldo -= debt;
	  printf("Saque: %2.2f\n", debt);
    
	}
      fflush(stdout);
      i ++;

      pthread_mutex_unlock(&mutex);
    }
}
